#Keys for define componentMap(composite, component) pairs
text.class=com.epam.mrymbayev.entity.Text
paragraph.class=com.epam.mrymbayev.entity.Paragraph
sentence.class=com.epam.mrymbayev.entity.Sentence
sentence.components=com.epam.mrymbayev.entity.SentenceToken
word.class=com.epam.mrymbayev.entity.Word
pmark.class=com.epam.mrymbayev.entity.PMark
number.class=com.epam.mrymbayev.entity.Number
unknowntoken.class=com.epam.mrymbayev.entity.UnknownToken
symbol.class=com.epam.mrymbayev.entity.Symbol

# <T extends AbstractComposite> object split|match regular expressions
textToParagrRegex=.*\r?\n?
paragrToSentenRegex=(?U)([^.!?]*(\.[^ ]+[^.!?]+)?)([.!?] *(\r?\n)*)*
sentncToTokensRegex=[\\p{L}]+((\\.|-)?([\\p{L}]+))?|\\s|\\d+|[\\p{Punct}]|\\s
wordToSymbRegex=\\w
pmarkToSymbRegex=[\\p{Punct}]|\\s
numbToSymbRegex=\\d+

#Regexes to define type of SentenceToken element
word=[\\p{L}]+((\\.|-)?([\\p{L}]+))?
number=\\d+
punctuation=[\\p{Punct}]|\\s